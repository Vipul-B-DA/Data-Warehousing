-- >> EDA: Exploring data objects from out database

-- DATABASE EXPLORATION

-- Explore all objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES

-- Explore all columns in the database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS

--Explore all columns in the database for table customers
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------


-- >> EDA: DIMENSION EXPLORATION

-- Explore all countries our customers come from
SELECT DISTINCT 
country 
FROM gold.dim_customers

-- Explore all categories (into major divisions)
SELECT DISTINCT 
category, sub_category, product_name
FROM gold.dim_products
ORDER BY 1,2,3

------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------


-- >> EDA: DATE EXPLORATION

-- Find the date of the first and the last order
-- How many years of sales are available
SELECT 
MIN(order_date) AS first_order_date,
MAX(order_date) AS last_order_date,
DATEDIFF(MONTH, MIN(order_date),MAX(order_date)) AS order_date_range
FROM gold.fact_sales

-- >> EDA: MEASURES EXPLORATION

-- Generate a Report that shows all key metric of the business

  SELECT 
  'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
  
  UNION ALL
  
  SELECT 
  'Total Qauntity', SUM(quantity) FROM gold.fact_sales
  
  UNION ALL
  
  SELECT
  'Average price', AVG(price) FROM gold.fact_sales
  
  UNION ALL
  
  SELECT
  'Total No. Orders', COUNT(DISTINCT order_number) FROM gold.fact_sales
  
  UNION ALL
  
  SELECT
  'Total No. Products', COUNT(DISTINCT product_name) FROM gold.dim_products
  
  UNION ALL
  
  SELECT
  'Total No. Customers', COUNT(customer_key) FROM gold.dim_customers

------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------

-- >> EDA:  MAGNITUDE ANALYSIS

-- Find Total Customers by countries
  SELECT
  country,
  COUNT(customer_key) AS Total_Customers
  FROM gold.dim_customers
  GROUP BY country
  ORDER BY Total_Customers DESC

-- Find total customers by Gender
  SELECT
  gender,
  COUNT(customer_key) AS Total_Customers
  FROM gold.dim_customers
  GROUP BY gender

-- Find total products by category
  SELECT
  category,
  COUNT(product_key) AS Total_products
  FROM gold.dim_products
  GROUP BY category
  ORDER BY Total_products DESC

-- What is the total revenue generated for each category
  SELECT
  p.category,
  SUM(f.sales_amount) AS Total_revenue
  FROM gold.fact_sales f
  LEFT JOIN gold.dim_products p 
  ON p.product_key = f.product_key
  GROUP BY p.category
  ORDER BY Total_revenue DESC

-- What is the total revenue generated by each customer
  SELECT
  c.customer_id,
  c.first_name,
  c.last_name,
  SUM(f.sales_amount) AS Total_revenue
  FROM gold.fact_sales f 
  LEFT JOIN gold.dim_customers c 
  ON c.customer_key = f.customer_key
  GROUP BY c.customer_id,
  c.first_name,
  c.last_name
  ORDER BY Total_revenue DESC

------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------


-- >> EDA: RANKING ANALYSIS

-- Which 5 product generate the lowest revenue
  SELECT TOP 5
  p.product_name,
  SUM(f.sales_amount) AS Total_revenue
  FROM gold.fact_sales f
  LEFT JOIN gold.dim_products p 
  ON p.product_key = f.product_key
  GROUP BY p.product_name
  ORDER BY Total_revenue 

-- Which 5 product generate the highest revenue
  SELECT *
  FROM(
      SELECT 
      p.product_name,
      SUM(f.sales_amount) AS Total_revenue,
      ROW_NUMBER() OVER(ORDER BY SUM(f.sales_amount) DESC) AS Rank_products
      FROM gold.fact_sales f 
      LEFT JOIN gold.dim_products p 
      ON f.product_key = p.product_key
      GROUP BY product_name
      )t 
  WHERE Rank_products <=5


------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
